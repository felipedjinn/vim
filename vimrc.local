
" If using a dark background within the editing area and syntax highlighting
" turn on this option as well
set background=dark

" Uncomment the following to have Vim load indentation rules and plugins
" according to the detected filetype.
" if has("autocmd")
"   filetype plugin indent on
" endif

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.

"set showcmd		            " Show (partial) command in status line.
set showmatch		            " Show matching brackets.
set ignorecase		            " Do case insensitive matching
"set smartcase		            " Do smart case matching
"set incsearch		            " Incremental search
set autowrite		            " Automatically save before commands like :next and :make
"set hidden                     " Hide buffers when they are abandoned
set mouse=a                     " Enable mouse usage (all modes)
set nocompatible	            " Use Vim defaults (much better!)
set viminfo='20,\"50	        " read/write a .viminfo file, don't store more
			                    " than 50 lines of registers
set history=50		            " keep 50 lines of command line history
set wildmode=longest,list       " Auto complete with <TAB> like bash
set number                      " Show line numbers
set sm			    	        " ShowMatch: mostra o in√≠cio do bloco recem fechado
set ruler			            " show cursor position
set shm=filmnrwxt  		        " Short Messages
set visualbell     	            " pisca a tela ao inves de bipar
set showmode
set showcmd                     " show (partial) command in status line
set title		                " Show the file name in prompt head
"set modeline
set autoread                    " Automatically read file changed outside of Vim
set cf                          " Enable error files & error jumping.
set clipboard+=unnamed          " Yanks go on clipboard instead.
set nowrap                      " Line wrapping off

set ts=4                        " Tabs are 4 spaces
set autoindent
set smartindent                 " Auto indent
set shiftwidth=4                " Tabs under smart indent
set expandtab
set nocp incsearch
set cinoptions=:0,p0,t0
"set cinwords=if,else,while,do,for,switch,case
"set formatoptions=tcqr
"set cindent
"set smarttab


filetype indent on              " Enable file type plugin
filetype on
filetype plugin on


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" <F3>
" toggle between dark and light backgrounds
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <silent><F3> :let &background=(&background == "dark"?"light":"dark")<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" <F4>
" toggle mouse mode between VIM and xterm
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function ShowMouseMode()
    if (&mouse == 'a')
        echo "MOUSE VIM"
    else
        echo "MOUSE X11"
    endif
endfunction
nnoremap <silent><F4> :let &mouse=(&mouse == "a"?"":"a")<CR>:call ShowMouseMode()<CR>))))


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" <F5>
" refresh - redraw window
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <silent><F5> :redraw!<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" <F8> or \a
" yank all lines
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <silent><F8> gg"+yG
nnoremap <silent><leader>a gg"+yG


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" <F10> or \n
" toggle line numbers
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <silent><F10> :set number!<CR>
nnoremap <silent><leader>n :set number!<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PHP Support
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" highlight SQL syntax in strings
let php_sql_query = 1

" highlight HTML in string
let php_htmlInStrings = 1 

" disable short tags
let php_noShortTags = 1

" enable folding for classes and functions
let php_folding = 0

" PHP Doc
source /home/lfrsilva/.vim/ftplugin/php-doc.vim
inoremap <buffer> <C-P> <Esc>:call PhpDocSingle()<CR>i
nnoremap <buffer> <C-P> :call PhpDocSingle()<CR>
vnoremap <buffer> <C-P> :call PhpDocRange()<CR>
let g:pdv_cfg_Uses = 1

" Autocomplete
autocmd FileType php set omnifunc=phpcomplete#CompletePHP


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Python Support
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" python dict
let g:pydiction_location="/home/lfrsilva/.vim/ftplugin/pydiction-1.2/complete-dict"

" For python.vim syntax by Dmitry Vasiliev. See ~/.vim/syntax/python.vim.
let g:python_highlight_all=1

autocmd FileType python setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Ruby Support
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType ruby setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CSS Support
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType css setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Javascript Support
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType javascript setlocal expandtab shiftwidth=2 tabstop=2 softtabstop=2
let javascript_enable_domhtmlcss=1


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Map auto complete for {, (, [, ", '
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
imap { {}<left>
imap ( ()<left>
imap [ []<left>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" =>  Nerd Tree
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use <Ctrl + a> to toogle NERDTree
nmap <silent><c-a> :NERDTreeToggle<CR>

" Ignored files
let NERDTreeIgnore=['\.vim$', '\~$', '\.pyc$']


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Statusline
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Always hide the statusline
set laststatus=2

" Format the statusline
set statusline=%<%f\%h%m%r%=%-20.(line=%l\ \ col=%c%V\ \ totlin=%L%)\ \ \%h%m%r%=%-40(bytval=0x%B,%n%Y%)\%P

